{"version":3,"file":"component---src-pages-tags-js-db23dd28a2695260252b.js","mappings":"mJA2EA,UArEqB,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,SAEhBC,GAF4C,EAAlBC,YACjB,IAAIC,gBAAgBH,EAASI,QACzBC,IAAI,QAqBjBC,GAnBwBC,EAAAA,EAAAA,gBAAe,cAArCC,kBAmByBC,MAAMC,QACrC,SAAAC,GAAI,OAAIA,EAAKC,YAAYC,KAAKC,QAAQb,IAAQ,KAGhD,OACE,gBAAC,IAAD,CAAQD,SAAUA,GAChB,2BACE,+BAAOC,EAAP,wBAEA,sBAAIc,MAAO,CAAEC,UAAU,SACpBV,EAAOW,KAAI,SAAAC,GACV,IAAMC,EAAQD,EAAKN,YAAYO,OAASD,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYT,KAG/B,8BAAQU,EAAAA,EAAAA,GAAWX,EAAKN,YAAYkB,QAEtC,+BACE,qBACEC,wBAAyB,CACvBC,OAAQd,EAAKN,YAAYqB,aAAef,EAAKgB,SAE/CN,SAAS","sources":["webpack://loel/./src/pages/tags.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport { formatTime } from \"../util/formatter\"\n\nimport Layout from \"../components/layout\"\n\nconst TagComponent = ({ location, pageContext }) => {\n  const params = new URLSearchParams(location.search)\n  const tag = params.get(\"tag\")\n\n  const { allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        nodes {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  `)\n\n  const result = allMarkdownRemark.nodes.filter(\n    node => node.frontmatter.tags.indexOf(tag) >= 0\n  )\n\n  return (\n    <Layout location={location}>\n      <div>\n        <div>`{tag}` 태그가 설정된 포스트 목록입니다.</div>\n\n        <ol style={{ listStyle: `none` }}>\n          {result.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <small>{formatTime(post.frontmatter.date)}</small>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </li>\n            )\n          })}\n        </ol>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagComponent\n"],"names":["location","tag","pageContext","URLSearchParams","search","get","result","useStaticQuery","allMarkdownRemark","nodes","filter","node","frontmatter","tags","indexOf","style","listStyle","map","post","title","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","formatTime","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}