{"version":3,"file":"component---src-templates-blog-post-js-40445c3deb5430fd6690.js","mappings":"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","sources":["webpack://loel/./src/components/bio.js","webpack://loel/./src/components/toc.js","webpack://loel/./src/components/tag.js","webpack://loel/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> <br />\n          {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\n\nconst TableOfContents = props => {\n  return (\n    <div\n      className=\"table-of-contents\"\n      style={{\n        right: \"calc(10vw)\",\n        position: \"fixed\",\n        top: \"180px\",\n      }}\n      dangerouslySetInnerHTML={{ __html: props.contents }}\n    ></div>\n  )\n}\n\nexport default TableOfContents\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Tags = ({ tags }) => {\n  return (\n    <div style={{ marginBottom: \"40px\" }}>\n      {tags.map(tag => (\n        <Link className=\"tag\" key={tag} to={`/tags?tag=${tag}`}>\n          {tag}\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nexport default Tags\n","import React, { useEffect } from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { formatTime } from \"../util/formatter\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport TableOfContents from \"../components/toc\"\nimport Tags from \"../components/tag\"\n\nconst onScroll = () => {\n  const items = document.querySelectorAll(\".table-of-contents a\")\n\n  const headers = [\n    ...document.querySelectorAll(\".blog-post h3\"),\n    ...document.querySelectorAll(\".blog-post h4\"),\n  ]\n\n  const filtered = headers.filter(\n    header => header.getBoundingClientRect().top <= 30\n  )\n\n  if (filtered.length > 0) {\n    const maxKey = Object.keys(filtered).reduce((k1, k2) =>\n      filtered[k1].getBoundingClientRect().top >\n      filtered[k2].getBoundingClientRect().top\n        ? k1\n        : k2\n    )\n    const currentHeader = filtered[maxKey].innerText\n\n    items.forEach(item => {\n      if (item.innerText === currentHeader) {\n        item.classList.add(\"active\")\n      } else {\n        item.classList.remove(\"active\")\n      }\n    })\n  } else {\n    items.forEach(item => item.classList.remove(\"active\"))\n  }\n}\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  useEffect(() => {\n    document.addEventListener(\"scroll\", onScroll)\n    return () => document.removeEventListener(\"scroll\", onScroll)\n  }, [])\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{formatTime(post.frontmatter.date)}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Tags tags={post.frontmatter.tags} />\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <TableOfContents contents={post.tableOfContents} />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query ($id: String!, $previousPostId: String, $nextPostId: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        date\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","S","layout","formats","src","width","height","quality","alt","name","summary","props","style","right","position","top","dangerouslySetInnerHTML","__html","contents","tags","marginBottom","map","tag","Link","key","to","onScroll","items","document","querySelectorAll","filtered","filter","header","getBoundingClientRect","length","maxKey","Object","keys","reduce","k1","k2","currentHeader","innerText","forEach","item","classList","add","remove","data","location","post","markdownRemark","siteTitle","title","previous","next","useEffect","addEventListener","removeEventListener","frontmatter","description","excerpt","itemScope","itemType","itemProp","formatTime","date","html","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","tableOfContents"],"sourceRoot":""}