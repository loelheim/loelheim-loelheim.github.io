{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2021_11/04_gatsby_customization_2_toc/",
    "result": {"data":{"site":{"siteMetadata":{"title":"loelheim"}},"markdownRemark":{"id":"f84ec0e5-c2a8-5b1e-99c4-62eb393a97e6","excerpt":"1. ToC - Table of Contents…","html":"<h3 id=\"1-toc---table-of-contents란\" style=\"position:relative;\"><a href=\"#1-toc---table-of-contents%EB%9E%80\" aria-label=\"1 toc   table of contents란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. ToC - Table of Contents란</h3>\n<p>쉽게 말해서 목차라고 보면 된다. 블로그를 찾다보면, 측면 상단 혹은 하단에 목차가 뜨는 것을 확인할 수 있다.</p>\n<p>이게 그렇게 중요한 것은 아닐지 몰라도 포스트를 읽다보면 내용이 어떻게 구성되어 있는지 혹은 내가 어디쯤을 읽고 있는지 알고 싶을 때가 있다. 목차를 제공하는 것이 읽는 분이나 나를 위해서 도움이 될 것 같아 추가한다.</p>\n<h3 id=\"2-쉽게-적용하는-toc\" style=\"position:relative;\"><a href=\"#2-%EC%89%BD%EA%B2%8C-%EC%A0%81%EC%9A%A9%ED%95%98%EB%8A%94-toc\" aria-label=\"2 쉽게 적용하는 toc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 쉽게 적용하는 ToC</h3>\n<p>우선 아래 의존성을 추가하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save gatsby-remark-autolink-headers\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save gatsby-remark-table-of-contents</code></pre></div>\n<p>그리고 <code class=\"language-text\">gatsby-config.js</code>에 아래 내용을 추가해주자.</p>\n<p>추가해 줄 내용은 <code class=\"language-text\">gatsby-remark-table-of-contents</code>, <code class=\"language-text\">gatsby-remark-autolink-headers</code> 부분이다.\n관련 <a href=\"https://www.gatsbyjs.com/plugins/gatsby-remark-table-of-contents/\">플러그인 설명</a>에 나온 정보를 거의 그대로 사용했고, 필요하다 생각했던 부분만 간단하게 바꿨다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-transformer-remark</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token operator\">...</span>\n          <span class=\"token punctuation\">{</span>\n            resolve<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-remark-table-of-contents</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n            options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              exclude<span class=\"token operator\">:</span> <span class=\"token string\">\"Table of Contents\"</span><span class=\"token punctuation\">,</span>\n              tight<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n              ordered<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n              fromHeading<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n              toHeading<span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n              className<span class=\"token operator\">:</span> <span class=\"token string\">\"table-of-contents\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-remark-autolink-headers</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n          <span class=\"token operator\">...</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그럼 설정은 끝이다.\n이제 각 포스트마다 아래 내용을 추가해주면 알아서 목차가 추가된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```toc\n```</code></pre></div>\n<p>만약에 포스트을 추가할 때마다 자동으로 목차가 반영되도록 하려고 한다면, <code class=\"language-text\">frontman</code> 스크립트의 템플릿을 수정하면 된다.\nCSS로 위치나 디자인만 수정한다면 그런대로 쓸만하지 않나 싶다.</p>\n<h3 id=\"3-그래도-뭔가-이건-좀-\" style=\"position:relative;\"><a href=\"#3-%EA%B7%B8%EB%9E%98%EB%8F%84-%EB%AD%94%EA%B0%80-%EC%9D%B4%EA%B1%B4-%EC%A2%80-\" aria-label=\"3 그래도 뭔가 이건 좀  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 그래도 뭔가 이건 좀 ..</h3>\n<p>적용해보니 단순해서 좋긴 한데, 미리 찾아본 <a href=\"https://blueshw.github.io/2020/05/30/table-of-contents/\">블로그</a>에서는 뭔가 나이스한 디자인으로 구현하고 있다. (사실 CSS가 문제라는걸 모르는데 왜 외면하는 것인가 …)</p>\n<p>어쨋거나 저 방법도 적용해보고 싶어서 고민을 좀 해봤다.</p>\n<ul>\n<li>우선 <code class=\"language-text\">GraphQL</code>로도 HTML 형태의 <code class=\"language-text\">ToC</code>를 뽑아내는 것은 가능</li>\n<li>포스트 템플릿에 질의한 결과를 바탕으로 컴포넌트를 구성하면 비슷한 구조는 물론 인터랙션까지 구현 가능</li>\n</ul>\n<p>일단은 가능한 것 같아 보이니 좀 살펴보도록 하자.</p>\n<h3 id=\"4-직접-구현해보자\" style=\"position:relative;\"><a href=\"#4-%EC%A7%81%EC%A0%91-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"4 직접 구현해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 직접 구현해보자</h3>\n<h4 id=\"커스텀-컴포넌트-추가\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%B6%94%EA%B0%80\" aria-label=\"커스텀 컴포넌트 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커스텀 컴포넌트 추가</h4>\n<p>우선 위에서 추가했던 <code class=\"language-text\">```toc```</code> 블록은 제거하고 커스텀 컴포넌트를 만들어 사용할 것이다.\n<code class=\"language-text\">src/components/toc.js</code> 파일을 추가하고 아래 내용을 입력하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">TableOfContents</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div\n            className<span class=\"token operator\">=</span><span class=\"token string\">\"table-of-contents\"</span>\n            style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n                right<span class=\"token operator\">:</span> <span class=\"token string\">'calc(10vw)'</span><span class=\"token punctuation\">,</span>\n                position<span class=\"token operator\">:</span> <span class=\"token string\">'fixed'</span><span class=\"token punctuation\">,</span>\n                top<span class=\"token operator\">:</span> <span class=\"token string\">'180px'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n            dangerouslySetInnerHTML<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> __html<span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>contents <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> TableOfContents</code></pre></div>\n<p><code class=\"language-text\">&lt;TableOfContents /></code>는 외부로부터 전달받은 <code class=\"language-text\">ToC</code> 정보를 주입하기 위한 컨테이너 역할을 하며 인터랙션을 위해 클래스를 미리 지정해둔다.</p>\n<h4 id=\"포스트-레이아웃-수정\" style=\"position:relative;\"><a href=\"#%ED%8F%AC%EC%8A%A4%ED%8A%B8-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%88%98%EC%A0%95\" aria-label=\"포스트 레이아웃 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>포스트 레이아웃 수정</h4>\n<p>다음은 <code class=\"language-text\">src/templates/blog-post.js</code>의 내용을 수정하여 포스트의 레이아웃을 수정하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> TableOfContents <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/toc\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onScroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.table-of-contents a'</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token operator\">...</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.blog-post h3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">...</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.blog-post h4'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">const</span> filtered <span class=\"token operator\">=</span> headers<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">header</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> header<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">&lt;=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token keyword\">const</span> maxKey <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">k1<span class=\"token punctuation\">,</span> k2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> filtered<span class=\"token punctuation\">[</span>k1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">></span> filtered<span class=\"token punctuation\">[</span>k2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">?</span> k1 <span class=\"token operator\">:</span> k2<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> currentHeader <span class=\"token operator\">=</span> filtered<span class=\"token punctuation\">[</span>maxKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>innerText\n\n      items<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">===</span> currentHeader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              item<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n              item<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    items<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">BlogPostTemplate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> location <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  \n  <span class=\"token operator\">...</span>\n  \n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> onScroll<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> onScroll<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Layout<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Seo<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>article<span class=\"token operator\">></span><span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>article<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span><span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>TableOfContents\n        contents<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>tableOfContents<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layout<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> BlogPostTemplate\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query (\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    ...\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        date\n        description\n      }\n    }\n    ...\n  }\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>주요 변경 사항을 요약해보면 다음과 같다.</p>\n<ul>\n<li>\n<p>import 추가</p>\n<ul>\n<li>컴포넌트가 사용이 종료되는 시점에 리스너를 해제할 수 있도록 돕는 <code class=\"language-text\">useEffect</code> Hook API 호출</li>\n<li>목차 정보를 주입하기 위한 <code class=\"language-text\">&lt;TableOfContents /></code> 커스텀 컴포넌트</li>\n</ul>\n</li>\n<li>\n<p>구현</p>\n<ul>\n<li>스크롤 위치에 따라 <code class=\"language-text\">ToC</code>의 포커싱 인터랙션을 처리해 줄 이벤트 리스너인 <code class=\"language-text\">onScroll</code> 구현</li>\n<li><code class=\"language-text\">BlogPostTemplate</code>에 이벤트 리스너 등록 및 해제 로직을 바인딩 하기 위해 <code class=\"language-text\">useEffect</code> 호출</li>\n</ul>\n</li>\n<li>\n<p>스펙 변경</p>\n<ul>\n<li>쿼리에 <code class=\"language-text\">tableOfContents</code> 항목 추가</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-변경-사항-자세히-보기\" style=\"position:relative;\"><a href=\"#5-%EB%B3%80%EA%B2%BD-%EC%82%AC%ED%95%AD-%EC%9E%90%EC%84%B8%ED%9E%88-%EB%B3%B4%EA%B8%B0\" aria-label=\"5 변경 사항 자세히 보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 변경 사항 자세히 보기</h3>\n<h4 id=\"쿼리-변경-사항\" style=\"position:relative;\"><a href=\"#%EC%BF%BC%EB%A6%AC-%EB%B3%80%EA%B2%BD-%EC%82%AC%ED%95%AD\" aria-label=\"쿼리 변경 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿼리 변경 사항</h4>\n<p>먼저 쿼리를 자세히 보면 <code class=\"language-text\">markdownRemark</code> 하위에 <code class=\"language-text\">tableOfContents</code>를 추가했는데, <code class=\"language-text\">ToC</code>로 구성할 항목을 HTML 형태로 반환하는 것을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">query {\n  markdownRemark(id : { eq: \"b2c7e184-b869-5c3c-9d28-4b72a0653bef\" }) {\n\t\ttableOfContents\n  }\n}\n\n{\n  \"data\": {\n    \"markdownRemark\": {\n      \"tableOfContents\": \"&lt;ul>\\n&lt;li>\\n&lt;p>&lt;a href=\\\"#1-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\\\">1. 들어가기에 앞서&lt;/a>&lt;/p>\\n&lt;/li>\\n&lt;li>\\n&lt;p>&lt;a href=\\\"#2-%EA%B0%9C%EC%B8%A0%EB%B9%84%EB%9E%80\\\">2. 개츠비란&lt;/a>&lt;/p>\\n&lt;/li>\\n&lt;li>\\n&lt;p>&lt;a href=\\\"#3-%EC%9E%A5%EB%8B%A8%EC%A0%90-%EB%B6%84%EC%84%9D\\\">3. 장단점 분석&lt;/a>&lt;/p>\\n&lt;ul>\\n&lt;li>&lt;a href=\\\"#%EC%9E%A5%EC%A0%90\\\">장점&lt;/a>&lt;/li>\\n&lt;li>&lt;a href=\\\"#%EB%8B%A8%EC%A0%90\\\">단점&lt;/a>&lt;/li>\\n&lt;/ul>\\n&lt;/li>\\n&lt;li>\\n&lt;p>&lt;a href=\\\"#4-%EC%84%A0%ED%83%9D-%EA%B8%B0%EC%A4%80\\\">4. 선택 기준&lt;/a>&lt;/p>\\n&lt;/li>\\n&lt;/ul>\"\n    }\n  },\n  \"extensions\": {}\n}</code></pre></div>\n<p>이는  <code class=\"language-text\">```toc```</code> 블록의 내용과 동일하며 커스텀 컴포넌트의 내용을 채워넣을 목적으로 사용한다. 별도 컴포넌트로 분리한 이유는 위치나 마크업 등 설정을 조금 자유롭게 하기 위함이다.</p>\n<h4 id=\"onscroll-이벤트\" style=\"position:relative;\"><a href=\"#onscroll-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"onscroll 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onScroll 이벤트</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onScroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.table-of-contents a'</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token operator\">...</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.blog-post h3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">...</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.blog-post h4'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">const</span> filtered <span class=\"token operator\">=</span> headers<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">header</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> header<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">&lt;=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token keyword\">const</span> maxKey <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">k1<span class=\"token punctuation\">,</span> k2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> filtered<span class=\"token punctuation\">[</span>k1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">></span> filtered<span class=\"token punctuation\">[</span>k2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">?</span> k1 <span class=\"token operator\">:</span> k2<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> currentHeader <span class=\"token operator\">=</span> filtered<span class=\"token punctuation\">[</span>maxKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>innerText\n\n      items<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">===</span> currentHeader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              item<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n              item<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    items<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">items</code>는 <code class=\"language-text\">ToC</code>의 항목을 의미하며, <code class=\"language-text\">headers</code>는 본문 내의 헤더 목록을 의미한다. 스크롤 로직의 주요 포인트는 가장 최근에 지난 헤더의 내용과 <code class=\"language-text\">ToC</code> 항목 중 내용이 일치하는 대상의 클래스만 활성화하고 나머지는 비활성화하는 것이다.</p>\n<p><code class=\"language-text\">headers</code>의 <code class=\"language-text\">getBoundingClientRect().top</code>가 임계점 (여기서는 30) 이하로 내려간 대상을 추출하고, 그 중에서 가장 큰 값을 출력하면 가장 최근에 지나간 헤더 노드를 추출할 수 있다. 임계점의 크기를 조절하면 해당 섹션이 읽혀지기 시작하는 지점을 변경할 수 있다.</p>\n<p><code class=\"language-text\">headers</code>와 <code class=\"language-text\">items</code>를 비교할 방법이 텍스트 비교밖에 없기 때문에 선정한 헤더의 내용을 저장해두고 <code class=\"language-text\">items</code>를 순회하면서 내용이 맞는 대상을 찾으면 된다.</p>\n<h4 id=\"포스트-템플릿-수정\" style=\"position:relative;\"><a href=\"#%ED%8F%AC%EC%8A%A4%ED%8A%B8-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%88%98%EC%A0%95\" aria-label=\"포스트 템플릿 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>포스트 템플릿 수정</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">BlogPostTemplate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> location <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  \n  <span class=\"token keyword\">const</span> post <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>markdownRemark\n  <span class=\"token keyword\">const</span> siteTitle <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>siteMetadata<span class=\"token operator\">?.</span>title <span class=\"token operator\">||</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Title</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> previous<span class=\"token punctuation\">,</span> next <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> data\n  \n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> onScroll<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> onScroll<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Layout<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Seo<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>article<span class=\"token operator\">></span><span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>article<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span><span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>TableOfContents\n        contents<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>tableOfContents<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layout<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>달라진 부분이라면 <code class=\"language-text\">useEffect</code>라는 메서드가 호출되는 부분인데, <code class=\"language-text\">리액트</code>의 Hook API로 컴포넌트가 렌더링 된 이후에 수행할 로직 (스크롤 이벤트 등록)을 전달하고, 제거되기 전에 수행할 로직 (스크롤 이벤트 제거)을 전달하면 스크롤 이벤트가 정상적으로 등록/해지되는 것을 볼 수 있다.</p>\n<p>이로써 <code class=\"language-text\">ToC</code>에 대한 커스터마이징까지 얼추 끝냈다.</p>\n<h3 id=\"6-css-스타일링\" style=\"position:relative;\"><a href=\"#6-css-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81\" aria-label=\"6 css 스타일링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. CSS 스타일링</h3>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.table-of-contents</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-left</span><span class=\"token punctuation\">:</span> 1px solid #efefef<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> sticky<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">align-self</span><span class=\"token punctuation\">:</span> start<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.table-of-contents a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> .125rem 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all 50ms ease-in-out<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.table-of-contents a:hover,\n.table-of-contents a:focus</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #666<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.table-of-contents ul,\n.table-of-contents ol</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">list-style</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.table-of-contents li</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.table-of-contents .active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #333<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 500<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 110rem<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.table-of-contents</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>화면 크기에 따라서 목차를 보여줄지 결정하는 미디어 쿼리 외에는 특별한 부분은 없다.</p>\n<h3 id=\"7-추후에-하면-좋을-것들\" style=\"position:relative;\"><a href=\"#7-%EC%B6%94%ED%9B%84%EC%97%90-%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%84-%EA%B2%83%EB%93%A4\" aria-label=\"7 추후에 하면 좋을 것들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 추후에 하면 좋을 것들</h3>\n<p>위 스크롤 로직은 사용하는데에 큰 불편함은 없지만 마지막 헤더의 경우에는 스크롤을 할 수 있는 영역이 없을 수 있기 때문에 하이라이팅이 되지 않는 이슈가 있다.</p>\n<p>사실 크게 중요하지 않다고 생각해서 별도의 예외처리를 하지는 않았는데 만약 이런 부분이 조금 불편하다면 마지막 노드에 대한 처리만 해준다면 정상적으로 동작할 것이다.</p>\n<p>또한 위에서 수정한 쿼리를 보면 <code class=\"language-text\">timeToRead</code>도 컨텐츠의 내용에 맞게 내려주는 것을 볼 수 있다. 가능하다면 이 값과 현재 스크롤되는 위치 등을 계산해서 표기해주면 조금 더 읽는데 도움이 되지 않을까 싶다.</p>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h3>\n<ul>\n<li><a href=\"https://blueshw.github.io/2020/05/30/table-of-contents/\">https://blueshw.github.io/2020/05/30/table-of-contents/</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-toc---table-of-contents%EB%9E%80\">1. ToC - Table of Contents란</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EC%89%BD%EA%B2%8C-%EC%A0%81%EC%9A%A9%ED%95%98%EB%8A%94-toc\">2. 쉽게 적용하는 ToC</a></p>\n</li>\n<li>\n<p><a href=\"#3-%EA%B7%B8%EB%9E%98%EB%8F%84-%EB%AD%94%EA%B0%80-%EC%9D%B4%EA%B1%B4-%EC%A2%80-\">3. 그래도 뭔가 이건 좀 ..</a></p>\n</li>\n<li>\n<p><a href=\"#4-%EC%A7%81%EC%A0%91-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EC%9E%90\">4. 직접 구현해보자</a></p>\n<ul>\n<li><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%B6%94%EA%B0%80\">커스텀 컴포넌트 추가</a></li>\n<li><a href=\"#%ED%8F%AC%EC%8A%A4%ED%8A%B8-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%88%98%EC%A0%95\">포스트 레이아웃 수정</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-%EB%B3%80%EA%B2%BD-%EC%82%AC%ED%95%AD-%EC%9E%90%EC%84%B8%ED%9E%88-%EB%B3%B4%EA%B8%B0\">5. 변경 사항 자세히 보기</a></p>\n<ul>\n<li><a href=\"#%EC%BF%BC%EB%A6%AC-%EB%B3%80%EA%B2%BD-%EC%82%AC%ED%95%AD\">쿼리 변경 사항</a></li>\n<li><a href=\"#onscroll-%EC%9D%B4%EB%B2%A4%ED%8A%B8\">onScroll 이벤트</a></li>\n<li><a href=\"#%ED%8F%AC%EC%8A%A4%ED%8A%B8-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%88%98%EC%A0%95\">포스트 템플릿 수정</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#6-css-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81\">6. CSS 스타일링</a></p>\n</li>\n<li>\n<p><a href=\"#7-%EC%B6%94%ED%9B%84%EC%97%90-%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%84-%EA%B2%83%EB%93%A4\">7. 추후에 하면 좋을 것들</a></p>\n</li>\n<li>\n<p><a href=\"#reference\">Reference</a></p>\n</li>\n</ul>","frontmatter":{"title":"개츠비로 블로그 시작하기 - 커스터마이징 (2)","date":"2021-11-28T17:18:24.838Z","description":"개츠비로 시작하는 블로그, 포스트에 목차를 추가하자","tags":["gatsby","개츠비","blog","블로그","목차","Table of Contents","ToC"]}},"previous":{"fields":{"slug":"/2021_11/03_gatsby_customization_1_writing/"},"frontmatter":{"title":"개츠비로 블로그 시작하기 - 커스터마이징 (1)"}},"next":{"fields":{"slug":"/2021_11/05_gatsby_customization_3_search/"},"frontmatter":{"title":"개츠비로 블로그 시작하기 - 커스터마이징 (3)"}}},"pageContext":{"id":"f84ec0e5-c2a8-5b1e-99c4-62eb393a97e6","previousPostId":"b1b8261f-595f-58e0-9cdd-ab41d00780da","nextPostId":"ace6b2a0-ffbc-596d-9b02-296349141e2d"}},
    "staticQueryHashes": ["3000541721","3274528899"]}